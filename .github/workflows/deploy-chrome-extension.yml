name: Build & publish chrome extension

on:
  workflow_dispatch:
  push:
    branches:
      - master
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.13
        with:
          versionSpec: "5.x"
      - name: Execute GitVersion
        uses: gittools/actions/gitversion/execute@v0.9.13
        with:
          useConfigFile: true
      - name: Assign version tag to current commit
        run: |
          git tag -d "$GITVERSION_SEMVER"
          git tag "$GITVERSION_SEMVER"
          git push -f origin "$GITVERSION_SEMVER"
      - name: Augmentations to build
        run: |
          jq '.version="$GITVERSION_SEMVER"' package.json > package.json.new && mv package.json.new package.json
          cd "./public"
          jq '.version="$GITVERSION_SEMVER"' manifest.json > manifest.json.new && mv manifest.json.new manifest.json
          cd ..
      - name: Install NPM Dependencies
        run: npm install
      - name: Build Chrome Extension
        run: npm run build
      - name: Zip extension
        uses: TheDoctor0/zip-release@0.6.1
        with:
          type: "zip"
          directory: "./public/"
      - name: Move zip release to publish directory
        run: |
          mkdir publish
          mv ./public/release.zip publish/
      - name: Share publish directory in artifacts
        uses: actions/upload-artifact@v3
        with:
          name: publish
          path: publish
      - name: Upload & publish package
        # You may pin to the exact commit or the version.
        # uses: Passiverecords/chrome-extension-upload-action@d46910ee6515270bde08c1fe2bf0bceaaf5d7fb7
        uses: Passiverecords/chrome-extension-upload-action@1.4.1
        with:
          # Auth refresh token
          refresh-token: ${{secrets.REFRESHTOKEN}}
          # Extension application target id
          app-id: ${{secrets.APPID}}
          # Token client id
          client-id: ${{secrets.CLIENTID}}
          # Token client secret
          client-secret: ${{secrets.CLIENTSECRET}}
          # Name of zipped target upload file
          file-name: "./publish/release.zip"
          # True Or False to publish after upload
          publish: False
